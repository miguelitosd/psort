#!/usr/bin/perl -w
use strict;
use Getopt::Long;
my $tot=0;
my %data=();
my $decimal=4;

GetOptions(
    "csv|c"     => \my $csv,
    "csvall|a"  => \my $csvall,
    "decimal|d=i" => \$decimal,
    "help|h"    => sub { usage(); exit 0; }
);

while (<>) {
		chomp;
		$data{$_}++; # Gets us uniq -c equiv
		$tot++;
}

if ($tot eq 0) { exit; }
# Get max width of number column

my $len = length($tot);
foreach my $key (sort { $data{$a} <=> $data{$b} } keys %data) { # Gets us the sort | (above uniq -c) | sort -n equiv
		my $p=(($data{$key}/$tot)*100);
        if (($csv) or ($csvall)) {
            if ($csvall) {
                $key =~ s/\s+/,/g;
            }
            if ( $p < 10 ) {
                printf("%1.${decimal}f%s,%d,%s\n",$p,'%',$data{$key},$key);
            } else {
                printf("%2.${decimal}f%s,%d,%s\n",$p,'%',$data{$key},$key);
            }
        } else {
            if ( $p < 10 ) {
                printf(" %1.${decimal}f%s  %${len}d %s\n",$p,'%',$data{$key},$key);
            } else {
                printf("%2.${decimal}f%s  %${len}d %s\n",$p,'%',$data{$key},$key);
            }
        }
}
if ($csv) {
    printf("%8s,%${len}d\n",'Total:',$tot);
} else {
    printf("%8s  %${len}d\n",'Total:',$tot);
}


sub usage {
    print "Usage: $0 [--csv] [--csvall] [--help]
    --csv       : Do output as csv rather than formatted for a human to read
    --csvall    : Do output as csv replacing any/all whitespaces with commas
    --decimnal  : Specify how many decimal places to compute (default 4)
    --help      : Output this help info

Synopsis: Takes input and essentially does the equivalent of `sort | uniq -c | sort -n` 
with added percentages and total info, default output is nicely formatted for humans to read.
";
}
